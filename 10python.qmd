---
title: "파이썬 소개"
format: html
---

## 파이쎤 소개
파이썬(Python)은 배우기 쉽고 강력한 기능을 갖춘 프로그래밍 언어이다. 문법이 간결하고 가독성이 높아 초보자부터 전문가까지 폭넓게 사용하고 있다.  

### 파이썬의 특징  
  - **쉬운 문법**: 영어와 비슷한 구문 구조를 가지고 있어 처음 배우는 사람도 쉽게 익힐 수 있다.  
  - **높은 생산성**: 적은 코드로 강력한 기능을 구현할 수 있어 개발 속도가 빠르다.  
  - **다양한 활용 분야**: 웹 개발, 데이터 분석, 인공지능, 자동화 등 다양한 분야에서 사용된다.  
  - **강력한 커뮤니티**: 많은 개발자가 사용하며 다양한 라이브러리와 자료가 제공된다.  

### 파이썬의 활용 분야  
  - **웹 개발**: Django, Flask와 같은 프레임워크를 활용하여 웹사이트와 API를 개발할 수 있다.  
  - **데이터 분석 및 인공지능**: pandas, NumPy, TensorFlow 등 라이브러리를 이용하여 데이터 처리와 머신러닝 모델을 만들 수 있다.  
  - **자동화 및 스크립트**: 반복 작업을 자동화하는 데 유용하며, 파일 처리 및 웹 스크래핑 등에 활용된다.  
  - **게임 개발**: Pygame과 같은 라이브러리를 이용하여 간단한 게임을 만들 수 있다.  

파이썬은 초보자도 쉽게 배울 수 있으면서도 강력한 기능을 제공하는 언어로, 프로그래밍을 처음 접하는 사람에게 추천할 만한 언어이다.

### 파이썬의 장점과 단점  

파이썬은 쉽고 강력한 프로그래밍 언어지만, 다른 언어와 비교했을 때 장점과 단점이 존재한다. 아래 표를 통해 주요 특징을 정리한다.  

| 구분 | 장점 | 단점 |
|------|------|------|
| 문법 | 코드가 간결하고 가독성이 높아 초보자도 쉽게 배울 수 있다. | 동적 타이핑(dynamic typing)으로 인해 대규모 프로젝트에서 예상치 못한 오류가 발생할 수 있다. |
| 속도 | 인터프리터 언어로 개발 속도가 빠르고 유지보수가 용이하다. | 컴파일 언어(C, C++)보다 실행 속도가 느리다. |
| 확장성 | 다양한 라이브러리와 프레임워크가 제공되어 다양한 분야에서 활용 가능하다. | 모바일 앱 개발에 적합한 프레임워크와 지원이 부족하다. |
| 다중 패러다임 | 객체 지향, 절차적, 함수형 프로그래밍을 모두 지원한다. | 다중 스레드 성능이 GIL(Global Interpreter Lock)으로 인해 제한된다. |
| 활용 분야 | 웹 개발, 데이터 분석, 인공지능, 자동화 등 다양한 분야에서 사용된다. | 실시간 시스템, 임베디드 시스템과 같은 성능이 중요한 환경에서는 부적절할 수 있다. |

파이썬은 배우기 쉽고 다양한 활용이 가능하다는 점에서 강력한 언어지만, 실행 속도나 멀티스레딩 제한과 같은 단점도 존재한다. 따라서 사용 목적에 따라 적절한 언어를 선택하는 것이 중요하다.

## 파이썬 설치  

파이썬을 설치하는 방법은 운영 체제에 따라 다를 수 있지만, 일반적으로 공식 웹사이트에서 설치 파일을 다운로드하여 설치하는 방식이 가장 쉽다.  

### 1. 파이썬 다운로드  
  - [파이썬 공식 웹사이트](https://www.python.org/)에 접속한다.  
  - 상단 메뉴에서 **Downloads**를 클릭한 후, 사용 중인 운영 체제(Windows, macOS, Linux)에 맞는 최신 버전의 파이썬을 다운로드한다.  

### 2. Windows에서 설치  
  - 다운로드한 `python-버전번호.exe` 파일을 실행한다.  
  - **"Add Python to PATH"** 옵션을 체크한 후 **"Install Now"** 버튼을 클릭한다.  
  - 설치가 완료되면 **"Close"** 버튼을 클릭한다.  

### 3. macOS에서 설치  
  - 다운로드한 `python-버전번호.pkg` 파일을 실행한다.  
  - 설치 마법사의 안내에 따라 진행한다.  
  - 설치가 완료되면 터미널을 열어 아래 명령어를 실행하여 설치를 확인한다.  
    ```sh
    python3 --version
    ```

### 4. Linux에서 설치 (Ubuntu 기준)  
  - 터미널을 열고 다음 명령어를 실행한다.  
    ```sh
    sudo apt update
    sudo apt install python3
    ```
  - 설치가 완료되면 아래 명령어로 버전을 확인한다.  
    ```sh
    python3 --version
    ```

### 5. 설치 확인  
  - 터미널(또는 명령 프롬프트, PowerShell)을 열고 아래 명령어를 입력한다.  
    ```sh
    python --version
    ```
  - 설치된 파이썬 버전이 출력되면 정상적으로 설치된 것이다.  

설치 후에는 @sec-idle, VS Code, Jupyter Notebook 등의 개발 환경을 설정하여 코딩을 시작할 수 있다.

## 참고자료

### IDLE {#sec-idle} 

<center>
![](images/idle_run.png)
</center>


IDLE(Integrated Development and Learning Environment)은 파이썬에 기본적으로 포함된 통합 개발 환경(IDE)으로, 초보자가 쉽게 파이썬을 실행하고 학습할 수 있도록 설계된 프로그램이다.  

#### IDLE의 특징  
  - **기본 제공**: 파이썬을 설치하면 자동으로 포함되므로 별도의 설치가 필요하지 않다.  
  - **GUI 환경**: 코드 편집기와 실행 창을 제공하여 사용자가 쉽게 코드를 작성하고 실행할 수 있다.  
  - **대화형 인터프리터**: 즉시 코드를 실행하고 결과를 확인할 수 있는 인터랙티브 셸을 제공한다.  
  - **문법 강조**: 코드 편집 시 색상을 적용하여 가독성을 높여준다.  
  - **디버깅 기능**: 간단한 디버깅 도구를 제공하여 오류를 찾고 수정할 수 있다.  

#### IDLE 실행 방법  
  - **Windows**: `시작 메뉴 > Python > IDLE (Python 버전)` 선택  
  - **macOS**: `응용 프로그램 > Python 폴더 > IDLE` 실행  
  - **Linux**: 터미널에서 `idle3` 명령어 입력  

#### IDLE 사용 방법  
  - **대화형 셸(Interactive Shell)**:  
    실행 후 나타나는 창에서 바로 파이썬 코드를 입력하고 실행할 수 있다.  
    ```python
    >>> print("Hello, Python!")
    Hello, Python!
    ```
  - **스크립트 작성 및 실행**:  
    `File > New File`을 선택하여 새 파일을 만들고 코드를 작성한 후, `F5` 키를 눌러 실행할 수 있다.  

#### IDLE의 장점과 단점  

| 구분 | 장점 | 단점 |
|------|------|------|
| 사용 편의성 | 별도 설치 없이 바로 사용 가능하다. | 기능이 제한적이어서 대형 프로젝트에는 부적합하다. |
| 학습 도구 | 초보자가 배우기에 적합한 환경을 제공한다. | 자동 완성 기능이 부족하여 코드 작성 시 불편할 수 있다. |
| 인터랙티브 실행 | 코드 실행 결과를 즉시 확인할 수 있다. | 여러 파일을 관리하는 데 비효율적이다. |

IDLE은 파이썬을 처음 배우는 사람에게 적합한 개발 환경이며, 간단한 코드 실습이나 테스트를 할 때 유용하다. 하지만 규모가 큰 프로젝트를 진행할 경우 VS Code, PyCharm 같은 다른 개발 도구를 사용하는 것이 더 효율적이다.